{-
Copyright
    (c) 2025 shardex.finance 
All Rights Reserved.

This source code is licensed under the GPL-3.0 license found in the
LICENSE file in the root directory of this source tree.
-}

#include "../imports/workchain.fc";


builder pack_vault_wallet_data_builder(int balance, slice owner_address) inline {
    return begin_cell()
        .store_coins(balance)
        .store_slice(owner_address);
}

cell pack_vault_wallet_data(int balance, slice owner_address) inline {
    return pack_vault_wallet_data_builder(balance, owner_address)
           .end_cell();
}

() check_either_forward_payload(slice s) impure inline {
    if (s.preload_uint(1)) {
        ;; forward_payload in ref
        (int remain_bits, int remain_refs) = slice_bits_refs(s);
        throw_unless(error::invalid_message, (remain_refs == 1) & (remain_bits == 1)); ;; we check that there is no excess in the slice
    }
    ;; else forward_payload in slice - arbitrary bits and refs
}